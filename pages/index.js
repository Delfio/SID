import React from "react";
import Head from "next/head";
import Input from "../components/Input";
import Button from "../components/Button";
import Wrapper from "../components/Wrapper";
import SocialLinks from "../components/SocialLinks";

import useToast from '../hooks/Toas';


export default function Home() {
  const [login, setLogin] = React.useState("");
  const [password, setPassword] = React.useState("");
  const [loginError, setLoginError] = React.useState(false);
  const [passwordError, setPasswordError] = React.useState(false);
  const [pinValido, setPinValido] = React.useState(false);
  const [loading, setLoading] = React.useState(false);
  const [device, setDevice] = React.useState('desktop');

  const {showToast, handleDevide} = useToast();


  function handleLogin() {
    setLoading(true);
    const handle = () => {
      return new Promise((resolv, reject) => {
        setTimeout(() => {
          resolv()
        }, 2000)
      })
    }

    setLoading(true)
    handle().then(() => {
      setLoading(false)
      showToast({
        type: 'error',
        message: 'toast ja em uso!'
      });
      showToast({
        type: 'success',
        message: 'toast validado com sucesso!'
      });

      setPinValido(old => !old)
    })
    // setPinValido((old) => !old);
  }

  const handlePasswordBlur = React.useCallback(() => {
    setPasswordError(password.length < 5);
  }, [password]);

  const FormInicial = () => {
    return (
      <>
        <Input error={false} onChange={(e) => console.log(e)} placehold="Pin" />
        <Button label="Validar" onClick={handleLogin} />
      </>
    );
  };

  const FormLogin = () => {
    return (
      <>
        <Input
          error={false}
          onChange={(e) => console.log(e)}
          placehold="E-mail"
        />
        <Input
          error={false}
          onChange={(e) => console.log(e)}
          placehold="Password"
        />
        
        <Button label="Entrar" onClick={handleLogin} />
        <section style={{
          padding: 20
        }}>
          <a className="forgot text-muted" href="#">
            Esqueceu sua senha?
          </a>
        </section>
        <SocialLinks />
      </>
    );
  };

  React.useEffect(() => {

    function converterTipoDeDispositivo(){
      handleDevide({
        device: navigator.maxTouchPoints
      });
    }

    window.addEventListener('resize', (_) => {
      converterTipoDeDispositivo()
    });

    converterTipoDeDispositivo()

  }, [handleDevide]);

  return (
    <div>
      <Head>
        <title>Entre na plataforma</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="main">
        <Wrapper title="SID">
          <p className="text-muted"> Entre com suas credÃªnciais</p>

          {loading ? (
            <div className="spinner-border text-primary" role="status">
              <span className="visually-hidden">Loading...</span>
            </div>
          ) : (
            <>{pinValido ? <FormLogin /> : <FormInicial />}</>
          )}
        </Wrapper>
      </div>
    </div>
  );
}
